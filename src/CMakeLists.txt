cmake_minimum_required(VERSION 3.8 FATAL_ERROR)
project(hw2)

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_BUILD_TYPE release)

set(CMAKE_CXX_FLAGS "-Wno-unused-but-set-variable -Wno-unused-parameter -Wno-sign-compare")
set(CMAKE_CXX_FLAGS_DEBUG "-g -O0")
set(CMAKE_CXX_FLAGS_RELEASE "-O3")

find_package(OpenCV REQUIRED)
include_directories(${OpenCV_INCLUDE_DIRS})

if (${CMAKE_BUILD_TYPE} MATCHES [rR][eE][lL][eE][aA][sS][eE])
    message("Release mode enabled, using OpenMP")
    FIND_PACKAGE(OpenMP REQUIRED)
    if (OPENMP_FOUND)
        message("OPENMP FOUND")
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
        set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
    endif ()
else ()
    message("Debug mode enabled, disable OpenMP")
    list(APPEND CUDA_NVCC_FLAGS -g -G)
endif ()

if (BUILD_CUDA)
    message("Build with cuda support")
    enable_language(CUDA)
    list(APPEND CUDA_NVCC_FLAGS -O3)
    set(CMAKE_CUDA_STANDARD 14)
    set(CMAKE_CUDA_STANDARD_REQUIRED ON)
    add_executable(test_gpu gpu/test_gpu.cu)
    add_executable(main_gpu main_gpu.cu obj/obj_wrapper.cpp)
    target_link_libraries(test_gpu ${OpenCV_LIBS})
    target_link_libraries(main_gpu ${OpenCV_LIBS})
endif ()

if (BUILD_TEST)
    message("Build test")
    add_executable(bezier_test utils/bezier_test.cpp)
    target_link_libraries(bezier_test ${OpenCV_LIBS})
    add_executable(mesh_obj_test utils/mesh_obj_test.cpp obj/obj_wrapper.cpp)
endif ()

set(EXEC_FILES main.cpp utils/renderer.cpp obj/obj_wrapper.cpp)
add_executable(main ${EXEC_FILES})
target_link_libraries(main ${OpenCV_LIBS})
